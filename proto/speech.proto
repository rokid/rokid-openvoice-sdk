syntax = "proto2";

package rokid.open.speech.v2;

import public "speech_types.proto";

enum RespType {
  // 中间结果 asr extra
  INTERMEDIATE = 0;
  // asr最终结果
  ASR_FINISH = 1;
  // 请求完成, 如果SpeechOptions.no_nlp = false，Response包中带有nlp, action结果
  FINISH = 2;
}

enum Lang {
  ZH = 0;
  EN = 1;
}

enum VadMode {
  // 客户端决定vad_start, vad_end
  LOCAL = 0;
  // 云端决定vad_start, vad_end
  CLOUD = 1;
}

message SpeechOptions {
  // zh
  // en
  required Lang lang = 1;

  // pcm
  // opu
  // opu2
  required rokid.open.speech.v1.Codec codec = 2;

  required VadMode vad_mode = 3;

  optional uint32 vend_timeout = 4;

  required bool no_nlp = 5;

  required bool no_intermediate_asr = 6;

  optional string stack = 7;

  optional string voice_trigger = 8;

  optional float voice_power = 9;

  optional uint32 trigger_start = 10;

  optional uint32 trigger_length = 11;

  // json string: options of skills
  // {
  //   "media_player_status": "xxx"
  // }
  optional string skill_options = 12;
  optional string voice_extra   = 13;
  optional uint32 vad_begin     = 14;
  optional bool no_trigger_confirm = 15;
}

message SpeechRequest {
  required int32 id = 1;

  required rokid.open.speech.v1.ReqType type = 2;

  optional bytes voice = 3;

  optional string asr = 4;

  optional SpeechOptions options = 5;

}

message SpeechResponse {
  required int32 id = 1;

  required RespType type = 2;

  required rokid.open.speech.v1.SpeechErrorCode result = 3;

  optional string asr = 4;

  optional string nlp = 5;

  optional string action = 6;

  // {
  //   "activation": "fake|reject|accept|none"
  // }
  optional string extra = 7;

  /* scores[0]=per am score; scores[1]=glob am score; scores[2]=glob lm score */
  // repeated float asr_scores = 8;

  // {"id": "xxx"}
  // optional string vpr = 9;
  // optional string asr_phoneticisms = 10;
  optional string voice_trigger = 11;
}
